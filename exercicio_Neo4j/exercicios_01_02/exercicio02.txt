// Criação de usuários
CREATE (a:Usuario {nome: 'Alice', idade: 25})
CREATE (b:Usuario {nome: 'Bob', idade: 30})
CREATE (c:Usuario {nome: 'Charlie', idade: 35})
CREATE (d:Usuario {nome: 'David', idade: 40})
CREATE (e:Usuario {nome: 'Eve', idade: 45})

// Criação de postagens
CREATE (p1:Postagem {titulo: 'Observações do Amanhecer', conteudo: 'Conteúdo da Observações do Amanhecer'})
CREATE (p2:Postagem {titulo: 'Memórias da Tarde', conteudo: 'Conteúdo da Memórias da Tarde'})
CREATE (p3:Postagem {titulo: 'Segredos da Noite', conteudo: 'Segredos da Noite'})

// Definindo relações de amizade
CREATE (a)-[:AMIGO]->(b)
CREATE (b)-[:AMIGO]->(c)
CREATE (c)-[:AMIGO]->(d)
CREATE (d)-[:AMIGO]->(e)

// Definindo quem fez as postagens
CREATE (a)-[:POSTOU]->(p1)
CREATE (b)-[:POSTOU]->(p2)
CREATE (c)-[:POSTOU]->(p3)



// EXERCICIO 02 - FUNÇÕES NEO4J:

// Encontre o usuário mais velho.

Resposta: "Eve"
Query: MATCH (usuario:Usuario) RETURN usuario.nome, usuario.idade ORDER BY usuario.idade DESC LIMIT 1

// Quantos usuários têm mais de 30 anos?

Resposta: "3"
Query: MATCH (usuario:Usuario) WHERE usuario.idade > 30 RETURN COUNT(usuario) AS total

// Qual é a média de idade dos usuários?

Resposta: "35.0"
Query: MATCH (usuario:Usuario) RETURN AVG(usuario.idade) AS media_idade